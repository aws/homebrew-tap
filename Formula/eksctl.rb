# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Eksctl < Formula
    desc "The official CLI for Amazon EKS"
    homepage "https://docs.aws.amazon.com/eks/latest/eksctl/"
    version "0.213.0"
  
    depends_on "kubernetes-cli"
    depends_on "aws-iam-authenticator"
  
    on_macos do
      if Hardware::CPU.arm?
        url "https://github.com/eksctl-io/eksctl/releases/download/v0.213.0/eksctl_Darwin_arm64.tar.gz"
        sha256 "43d20d2a450676db9ff2f7cce072c794105f1188ba651fd4a81dee855df1f681"
  
        def install
          bin.install "eksctl"
  
          # Install bash completion
          output = Utils.popen_read("#{bin}/eksctl completion bash")
          (bash_completion/"eksctl").write output
  
          # Install zsh completion
          output = Utils.popen_read("#{bin}/eksctl completion zsh")
          (zsh_completion/"_eksctl").write output
        end
      end
      if Hardware::CPU.intel?
        url "https://github.com/eksctl-io/eksctl/releases/download/v0.213.0/eksctl_Darwin_amd64.tar.gz"
        sha256 "284cb5622caac981256f236315715a9ee693db6fbc3897e45fb737288039c72b"
  
        def install
          bin.install "eksctl"
  
          # Install bash completion
          output = Utils.popen_read("#{bin}/eksctl completion bash")
          (bash_completion/"eksctl").write output
  
          # Install zsh completion
          output = Utils.popen_read("#{bin}/eksctl completion zsh")
          (zsh_completion/"_eksctl").write output
        end
      end
    end
  
    on_linux do
      if Hardware::CPU.intel?
        url "https://github.com/eksctl-io/eksctl/releases/download/v0.213.0/eksctl_Linux_amd64.tar.gz"
        sha256 "7f1cbcb2717012061ebd2c85166472649670e6f24c8d5d2f0c56a2a4e72b374c"
  
        def install
          bin.install "eksctl"
  
          # Install bash completion
          output = Utils.popen_read("#{bin}/eksctl completion bash")
          (bash_completion/"eksctl").write output
  
          # Install zsh completion
          output = Utils.popen_read("#{bin}/eksctl completion zsh")
          (zsh_completion/"_eksctl").write output
        end
      end
      if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
        url "https://github.com/eksctl-io/eksctl/releases/download/v0.213.0/eksctl_Linux_arm64.tar.gz"
        sha256 "2ca6819e0e57c5acee45c77c44c36597677d08ce1b312a8d8e560ea1802535f8"
  
        def install
          bin.install "eksctl"
  
          # Install bash completion
          output = Utils.popen_read("#{bin}/eksctl completion bash")
          (bash_completion/"eksctl").write output
  
          # Install zsh completion
          output = Utils.popen_read("#{bin}/eksctl completion zsh")
          (zsh_completion/"_eksctl").write output
        end
      end
      if Hardware::CPU.arm? && !Hardware::CPU.is_64_bit?
        url "https://github.com/eksctl-io/eksctl/releases/download/v0.213.0/eksctl_Linux_armv6.tar.gz"
        sha256 "c9fd1e3966bdbbee59eab9a7379fd4ea4f050084cdf79e3f9af21603affcd33d"
  
        def install
          bin.install "eksctl"
  
          # Install bash completion
          output = Utils.popen_read("#{bin}/eksctl completion bash")
          (bash_completion/"eksctl").write output
  
          # Install zsh completion
          output = Utils.popen_read("#{bin}/eksctl completion zsh")
          (zsh_completion/"_eksctl").write output
        end
      end
    end
  
    head "https://github.com/eksctl-io/eksctl/releases/download/latest_release/eksctl_Darwin_amd64.tar.gz"
  end
