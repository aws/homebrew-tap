# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Eksctl < Formula
    desc "The official CLI for Amazon EKS"
    homepage "https://docs.aws.amazon.com/eks/latest/eksctl/"
    version "0.214.0"
  
    depends_on "kubernetes-cli"
    depends_on "aws-iam-authenticator"
  
    on_macos do
      if Hardware::CPU.arm?
        url "https://github.com/eksctl-io/eksctl/releases/download/v0.214.0/eksctl_Darwin_arm64.tar.gz"
        sha256 "3c6a857eef4ab3442469624da9c6523619c9f8602989d20607debfe645ac75cd"
  
        def install
          bin.install "eksctl"
  
          # Install bash completion
          output = Utils.popen_read("#{bin}/eksctl completion bash")
          (bash_completion/"eksctl").write output
  
          # Install zsh completion
          output = Utils.popen_read("#{bin}/eksctl completion zsh")
          (zsh_completion/"_eksctl").write output
        end
      end
      if Hardware::CPU.intel?
        url "https://github.com/eksctl-io/eksctl/releases/download/v0.214.0/eksctl_Darwin_amd64.tar.gz"
        sha256 "cd5000fc3bd8c70eeb9df06b3efb47a692eccf014c09e5bafc5d4a7cc532d148"
  
        def install
          bin.install "eksctl"
  
          # Install bash completion
          output = Utils.popen_read("#{bin}/eksctl completion bash")
          (bash_completion/"eksctl").write output
  
          # Install zsh completion
          output = Utils.popen_read("#{bin}/eksctl completion zsh")
          (zsh_completion/"_eksctl").write output
        end
      end
    end
  
    on_linux do
      if Hardware::CPU.intel?
        url "https://github.com/eksctl-io/eksctl/releases/download/v0.214.0/eksctl_Linux_amd64.tar.gz"
        sha256 "5c127d8dc0ce8c01c5a6d09c56d01d7c67c8180d66cde935898a613e54dcb0cc"
  
        def install
          bin.install "eksctl"
  
          # Install bash completion
          output = Utils.popen_read("#{bin}/eksctl completion bash")
          (bash_completion/"eksctl").write output
  
          # Install zsh completion
          output = Utils.popen_read("#{bin}/eksctl completion zsh")
          (zsh_completion/"_eksctl").write output
        end
      end
      if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
        url "https://github.com/eksctl-io/eksctl/releases/download/v0.214.0/eksctl_Linux_arm64.tar.gz"
        sha256 "cf0fb0f4d99937ea9e37ab24ae3492eae99d946f5b38cc1bac8a03c2b1be8006"
  
        def install
          bin.install "eksctl"
  
          # Install bash completion
          output = Utils.popen_read("#{bin}/eksctl completion bash")
          (bash_completion/"eksctl").write output
  
          # Install zsh completion
          output = Utils.popen_read("#{bin}/eksctl completion zsh")
          (zsh_completion/"_eksctl").write output
        end
      end
      if Hardware::CPU.arm? && !Hardware::CPU.is_64_bit?
        url "https://github.com/eksctl-io/eksctl/releases/download/v0.214.0/eksctl_Linux_armv6.tar.gz"
        sha256 "9d1892f79fba312ac0075a8aef6623de58b6ed7ea8cfbd5cc3ea33024c1fe4c5"
  
        def install
          bin.install "eksctl"
  
          # Install bash completion
          output = Utils.popen_read("#{bin}/eksctl completion bash")
          (bash_completion/"eksctl").write output
  
          # Install zsh completion
          output = Utils.popen_read("#{bin}/eksctl completion zsh")
          (zsh_completion/"_eksctl").write output
        end
      end
    end
  
    head "https://github.com/eksctl-io/eksctl/releases/download/latest_release/eksctl_Darwin_amd64.tar.gz"
  end
