# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Eksctl < Formula
    desc "The official CLI for Amazon EKS"
    homepage "https://docs.aws.amazon.com/eks/latest/eksctl/"
    version "0.212.0"
  
    depends_on "kubernetes-cli"
    depends_on "aws-iam-authenticator"
  
    on_macos do
      if Hardware::CPU.arm?
        url "https://github.com/eksctl-io/eksctl/releases/download/v0.212.0/eksctl_Darwin_arm64.tar.gz"
        sha256 "a2f332f324382e79dce96b5172afef6c3788be272f3b3821f406cb423b7b99d6"
  
        def install
          bin.install "eksctl"
  
          # Install bash completion
          output = Utils.popen_read("#{bin}/eksctl completion bash")
          (bash_completion/"eksctl").write output
  
          # Install zsh completion
          output = Utils.popen_read("#{bin}/eksctl completion zsh")
          (zsh_completion/"_eksctl").write output
        end
      end
      if Hardware::CPU.intel?
        url "https://github.com/eksctl-io/eksctl/releases/download/v0.212.0/eksctl_Darwin_amd64.tar.gz"
        sha256 "5e058817a8676d0b116fedf16e068bc7ae4815b6d86a7d8358e8b4731249f1d9"
  
        def install
          bin.install "eksctl"
  
          # Install bash completion
          output = Utils.popen_read("#{bin}/eksctl completion bash")
          (bash_completion/"eksctl").write output
  
          # Install zsh completion
          output = Utils.popen_read("#{bin}/eksctl completion zsh")
          (zsh_completion/"_eksctl").write output
        end
      end
    end
  
    on_linux do
      if Hardware::CPU.intel?
        url "https://github.com/eksctl-io/eksctl/releases/download/v0.212.0/eksctl_Linux_amd64.tar.gz"
        sha256 "7e8ce616bfbc7beb156dc72e1693efe2cab79a64bcbf726c44d8c4d11ebdb3f5"
  
        def install
          bin.install "eksctl"
  
          # Install bash completion
          output = Utils.popen_read("#{bin}/eksctl completion bash")
          (bash_completion/"eksctl").write output
  
          # Install zsh completion
          output = Utils.popen_read("#{bin}/eksctl completion zsh")
          (zsh_completion/"_eksctl").write output
        end
      end
      if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
        url "https://github.com/eksctl-io/eksctl/releases/download/v0.212.0/eksctl_Linux_arm64.tar.gz"
        sha256 "805b2192bb80c0371dae0155f8ede96be7834c85cbe5e700e889ce4646d640bb"
  
        def install
          bin.install "eksctl"
  
          # Install bash completion
          output = Utils.popen_read("#{bin}/eksctl completion bash")
          (bash_completion/"eksctl").write output
  
          # Install zsh completion
          output = Utils.popen_read("#{bin}/eksctl completion zsh")
          (zsh_completion/"_eksctl").write output
        end
      end
      if Hardware::CPU.arm? && !Hardware::CPU.is_64_bit?
        url "https://github.com/eksctl-io/eksctl/releases/download/v0.212.0/eksctl_Linux_armv6.tar.gz"
        sha256 "c36dab1c5610463295d8a3b8b70c1a37ca8a6381b5f47e89b30c68b1da98fc51"
  
        def install
          bin.install "eksctl"
  
          # Install bash completion
          output = Utils.popen_read("#{bin}/eksctl completion bash")
          (bash_completion/"eksctl").write output
  
          # Install zsh completion
          output = Utils.popen_read("#{bin}/eksctl completion zsh")
          (zsh_completion/"_eksctl").write output
        end
      end
    end
  
    head "https://github.com/eksctl-io/eksctl/releases/download/latest_release/eksctl_Darwin_amd64.tar.gz"
  end
